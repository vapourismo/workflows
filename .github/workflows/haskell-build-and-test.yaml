name: Haskell Build and Test

on:
  workflow_call:
    inputs:
      ghc-versions:
        type: string
        default: latest
        required: false

      cabal-versions:
        type: string
        default: latest
        required: false

      unstable-ghc-versions:
        type: string
        default: ""
        required: false

      run-on:
        type: string
        default: |
          ubuntu-latest
          macos-latest
        required: false

jobs:
  process-inputs:
    name: "Process workflow inputs"
    runs-on: ubuntu-latest
    outputs:
      ghc-versions: ${{ steps.ghc-versions.outputs.output }}
      unstable-ghc-versions: ${{ steps.unstable-ghc-versions.outputs.output }}
      cabal-versions: ${{ steps.cabal-versions.outputs.output }}
      run-on: ${{ steps.run-on.outputs.output }}
    steps:
      - name: Process ghc-versions
        id: ghc-versions
        uses: ./.github/actions/lines-to-array
        with:
          input: ${{ inputs.ghc-versions }}

      - name: Process unstable-ghc-versions
        id: unstable-ghc-versions
        uses: ./.github/actions/lines-to-array
        with:
          input: ${{ inputs.unstable-ghc-versions }}

      - name: Process cabal-versions
        id: cabal-versions
        uses: ./.github/actions/lines-to-array
        with:
          input: ${{ inputs.cabal-versions }}

      - name: Process run-on
        id: run-on
        uses: ./.github/actions/lines-to-array
        with:
          input: ${{ inputs.run-on }}

  build-and-test:
    name: "Build and Test"
    needs: process-inputs
    strategy:
      matrix:
        ghc-version: ${{ needs.process-inputs.outputs.ghc-versions }}
        cabal-version: ${{ needs.process-inputs.outputs.cabal-versions }}
        run-on: ${{ needs.process-inputs.outputs.run-on }}
    runs-on: ${{ matrix.run-on }}
    steps:
      - name: Check out source
        uses: actions/checkout@v2

      - name: Check build cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cabal/packages
            ~/.cabal/store
            dist-newstyle
          key: ${{ runner.os }}-${{ matrix.ghc-version }}

      - name: Setup GHC and Cabal
        uses: haskell/actions/setup@v1.2.9
        with:
          ghc-version: ${{ matrix.ghc-version }}
          cabal-version: ${{ matrix.cabal-version }}

      - name: Configure Cabal packages
        run: cabal configure --disable-documentation --enable-tests --disable-optimization

      - name: Build dependencies
        run: cabal build --dependencies-only all

      - name: Build
        run: cabal build all

      - name: Test
        run: cabal test all

  build-and-test-unstable:
    name: "Build and Test"
    needs: process-inputs
    strategy:
      matrix:
        ghc-version: ${{ needs.process-inputs.outputs.unstable-ghc-versions }}
        cabal-version: ${{ needs.process-inputs.outputs.cabal-versions }}
        run-on: ${{ needs.process-inputs.outputs.run-on }}
    runs-on: ${{ matrix.run-on }}
    continue-on-error: true
    steps:
      - name: Check out source
        uses: actions/checkout@v2

      - name: Check build cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cabal/packages
            ~/.cabal/store
            dist-newstyle
          key: ${{ runner.os }}-${{ matrix.ghc-version }}

      - name: Setup GHC and Cabal
        uses: haskell/actions/setup@v1.2.9
        with:
          ghc-version: ${{ matrix.ghc-version }}
          cabal-version: ${{ matrix.cabal-version }}

      - name: Configure Cabal packages
        run: cabal configure --disable-documentation --enable-tests --disable-optimization

      - name: Build dependencies
        run: cabal build --dependencies-only all

      - name: Build
        run: cabal build all

      - name: Test
        run: cabal test all
